PInvoke.Kernel32.APP_MEMORY_INFORMATION
PInvoke.Kernel32.APP_MEMORY_INFORMATION.APP_MEMORY_INFORMATION() -> void
PInvoke.Kernel32.APP_MEMORY_INFORMATION.AvailableCommit -> ulong
PInvoke.Kernel32.APP_MEMORY_INFORMATION.PeakPrivateCommitUsage -> ulong
PInvoke.Kernel32.APP_MEMORY_INFORMATION.PrivateCommitUsage -> ulong
PInvoke.Kernel32.APP_MEMORY_INFORMATION.TotalCommitUsage -> ulong
PInvoke.Kernel32.CONSOLE_READCONSOLE_CONTROL
PInvoke.Kernel32.CONSOLE_READCONSOLE_CONTROL.CONSOLE_READCONSOLE_CONTROL() -> void
PInvoke.Kernel32.CONSOLE_READCONSOLE_CONTROL.dwControlKeyState -> PInvoke.Kernel32.ControlKeyStates
PInvoke.Kernel32.CONSOLE_READCONSOLE_CONTROL.dwCtrlWakeupMask -> uint
PInvoke.Kernel32.CONSOLE_READCONSOLE_CONTROL.nInitialChars -> uint
PInvoke.Kernel32.CONSOLE_READCONSOLE_CONTROL.nLength -> int
PInvoke.Kernel32.CreatePseudoConsoleFlags
PInvoke.Kernel32.CreatePseudoConsoleFlags.None = 0 -> PInvoke.Kernel32.CreatePseudoConsoleFlags
PInvoke.Kernel32.CreatePseudoConsoleFlags.PSEUDOCONSOLE_INHERIT_CURSOR = 1 -> PInvoke.Kernel32.CreatePseudoConsoleFlags
PInvoke.Kernel32.CreateThreadFlags
PInvoke.Kernel32.CreateThreadFlags.CREATE_SUSPENDED = 4 -> PInvoke.Kernel32.CreateThreadFlags
PInvoke.Kernel32.CreateThreadFlags.None = 0 -> PInvoke.Kernel32.CreateThreadFlags
PInvoke.Kernel32.CreateThreadFlags.STACK_SIZE_PARAM_IS_A_RESERVATION = 65536 -> PInvoke.Kernel32.CreateThreadFlags
PInvoke.Kernel32.DISK_GEOMETRY
PInvoke.Kernel32.DISK_GEOMETRY.BytesPerSector -> uint
PInvoke.Kernel32.DISK_GEOMETRY.Cylinders -> long
PInvoke.Kernel32.DISK_GEOMETRY.DISK_GEOMETRY() -> void
PInvoke.Kernel32.DISK_GEOMETRY.MediaType -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.DISK_GEOMETRY.SectorsPerTrack -> uint
PInvoke.Kernel32.DISK_GEOMETRY.TracksPerCylinder -> uint
PInvoke.Kernel32.FILE_ZERO_DATA_INFORMATION
PInvoke.Kernel32.FILE_ZERO_DATA_INFORMATION.BeyondFinalZero -> long
PInvoke.Kernel32.FILE_ZERO_DATA_INFORMATION.FILE_ZERO_DATA_INFORMATION() -> void
PInvoke.Kernel32.FILE_ZERO_DATA_INFORMATION.FileOffset -> long
PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_CASE_PRESERVED_NAMES = 2 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_CASE_SENSITIVE_SEARCH = 1 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_DAX_VOLUME = 536870912 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_FILE_COMPRESSION = 16 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_NAMED_STREAMS = 262144 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_PERSISTENT_ACLS = 8 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_READ_ONLY_VOLUME = 524288 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_SEQUENTIAL_WRITE_ONCE = 1048576 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_SUPPORTS_ENCRYPTION = 131072 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_SUPPORTS_EXTENDED_ATTRIBUTES = 8388608 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_SUPPORTS_HARD_LINKS = 4194304 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_SUPPORTS_OBJECT_IDS = 65536 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_SUPPORTS_OPEN_BY_FILE_ID = 16777216 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_SUPPORTS_REPARSE_POINTS = 128 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_SUPPORTS_SPARSE_FILES = 64 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_SUPPORTS_TRANSACTIONS = 2097152 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_SUPPORTS_USN_JOURNAL = 33554432 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_UNICODE_ON_DISK = 4 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_VOLUME_IS_COMPRESSED = 32768 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.FileSystemFlags.FILE_VOLUME_QUOTAS = 32 -> PInvoke.Kernel32.FileSystemFlags
PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_120M_512 = 13 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_128Mb_512 = 20 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_1Pt23_1024 = 18 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_1Pt2_512 = 17 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_1Pt44_512 = 2 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_200Mb_512 = 23 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_20Pt8_512 = 4 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_230Mb_512 = 21 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_240M_512 = 24 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_2Pt88_512 = 3 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_32M_512 = 25 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_640_512 = 14 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F3_720_512 = 5 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F5_160_512 = 10 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F5_180_512 = 9 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F5_1Pt23_1024 = 19 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F5_1Pt2_512 = 1 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F5_320_1024 = 8 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F5_320_512 = 7 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F5_360_512 = 6 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F5_640_512 = 15 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F5_720_512 = 16 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.F8_256_128 = 22 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.FixedMedia = 12 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.RemovableMedia = 11 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEDIA_TYPE.Unknown = 0 -> PInvoke.Kernel32.MEDIA_TYPE
PInvoke.Kernel32.MEMORY_PRIORITY_INFORMATION
PInvoke.Kernel32.MEMORY_PRIORITY_INFORMATION.MEMORY_PRIORITY_INFORMATION() -> void
PInvoke.Kernel32.MEMORY_PRIORITY_INFORMATION.MemoryPriority -> PInvoke.Kernel32.MemoryPriority
PInvoke.Kernel32.MemoryPriority
PInvoke.Kernel32.MemoryPriority.MEMORY_PRIORITY_BELOW_NORMAL = 4 -> PInvoke.Kernel32.MemoryPriority
PInvoke.Kernel32.MemoryPriority.MEMORY_PRIORITY_LOW = 2 -> PInvoke.Kernel32.MemoryPriority
PInvoke.Kernel32.MemoryPriority.MEMORY_PRIORITY_LOWEST = 0 -> PInvoke.Kernel32.MemoryPriority
PInvoke.Kernel32.MemoryPriority.MEMORY_PRIORITY_MEDIUM = 3 -> PInvoke.Kernel32.MemoryPriority
PInvoke.Kernel32.MemoryPriority.MEMORY_PRIORITY_NORMAL = 5 -> PInvoke.Kernel32.MemoryPriority
PInvoke.Kernel32.MemoryPriority.MEMORY_PRIORITY_VERY_LOW = 1 -> PInvoke.Kernel32.MemoryPriority
PInvoke.Kernel32.OSPlatformId
PInvoke.Kernel32.OSPlatformId.VER_PLATFORM_WIN32_NT = 2 -> PInvoke.Kernel32.OSPlatformId
PInvoke.Kernel32.OSPlatformId.VER_PLATFORM_WIN32_WINDOWS = 1 -> PInvoke.Kernel32.OSPlatformId
PInvoke.Kernel32.OSPlatformId.VER_PLATFORM_WIN32s = 0 -> PInvoke.Kernel32.OSPlatformId
PInvoke.Kernel32.OSVERSIONINFO
PInvoke.Kernel32.OSVERSIONINFO.OSVERSIONINFO() -> void
PInvoke.Kernel32.OSVERSIONINFO.dwBuildNumber -> int
PInvoke.Kernel32.OSVERSIONINFO.dwMajorVersion -> int
PInvoke.Kernel32.OSVERSIONINFO.dwMinorVersion -> int
PInvoke.Kernel32.OSVERSIONINFO.dwOSVersionInfoSize -> int
PInvoke.Kernel32.OSVERSIONINFO.dwPlatformId -> PInvoke.Kernel32.OSPlatformId
PInvoke.Kernel32.OSVERSIONINFO.szCSDVersion -> char*
PInvoke.Kernel32.PROCESSOR_NUMBER
PInvoke.Kernel32.PROCESSOR_NUMBER.Group -> ushort
PInvoke.Kernel32.PROCESSOR_NUMBER.Number -> byte
PInvoke.Kernel32.PROCESSOR_NUMBER.PROCESSOR_NUMBER() -> void
PInvoke.Kernel32.PROCESSOR_NUMBER.Reserved -> byte
PInvoke.Kernel32.PROCESS_INFORMATION_CLASS
PInvoke.Kernel32.PROCESS_INFORMATION_CLASS.ProcessAppMemoryInfo = 2 -> PInvoke.Kernel32.PROCESS_INFORMATION_CLASS
PInvoke.Kernel32.PROCESS_INFORMATION_CLASS.ProcessInPrivateInfo = 3 -> PInvoke.Kernel32.PROCESS_INFORMATION_CLASS
PInvoke.Kernel32.PROCESS_INFORMATION_CLASS.ProcessInformationClassMax = 9 -> PInvoke.Kernel32.PROCESS_INFORMATION_CLASS
PInvoke.Kernel32.PROCESS_INFORMATION_CLASS.ProcessLeapSecondInfo = 8 -> PInvoke.Kernel32.PROCESS_INFORMATION_CLASS
PInvoke.Kernel32.PROCESS_INFORMATION_CLASS.ProcessMemoryExhaustionInfo = 1 -> PInvoke.Kernel32.PROCESS_INFORMATION_CLASS
PInvoke.Kernel32.PROCESS_INFORMATION_CLASS.ProcessMemoryPriority = 0 -> PInvoke.Kernel32.PROCESS_INFORMATION_CLASS
PInvoke.Kernel32.PROCESS_INFORMATION_CLASS.ProcessPowerThrottling = 4 -> PInvoke.Kernel32.PROCESS_INFORMATION_CLASS
PInvoke.Kernel32.PROCESS_INFORMATION_CLASS.ProcessProtectionLevelInfo = 7 -> PInvoke.Kernel32.PROCESS_INFORMATION_CLASS
PInvoke.Kernel32.PROCESS_INFORMATION_CLASS.ProcessReservedValue1 = 5 -> PInvoke.Kernel32.PROCESS_INFORMATION_CLASS
PInvoke.Kernel32.PROCESS_INFORMATION_CLASS.ProcessTelemetryCoverageInfo = 6 -> PInvoke.Kernel32.PROCESS_INFORMATION_CLASS
PInvoke.Kernel32.PROCESS_LEAP_SECOND_INFO
PInvoke.Kernel32.PROCESS_LEAP_SECOND_INFO.Flags -> PInvoke.Kernel32.ProcessLeapSecondInfoFlags
PInvoke.Kernel32.PROCESS_LEAP_SECOND_INFO.PROCESS_LEAP_SECOND_INFO() -> void
PInvoke.Kernel32.PROCESS_LEAP_SECOND_INFO.Reserved -> uint
PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_INFO
PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_INFO.PROCESS_MEMORY_EXHAUSTION_INFO() -> void
PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_INFO.Reserved -> ushort
PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_INFO.Type -> PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_TYPE
PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_INFO.Value -> System.UIntPtr
PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_INFO.Version -> ushort
PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_TYPE
PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_TYPE.PMETypeFailFastOnCommitFailure = 0 -> PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_TYPE
PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_TYPE.PMETypeMax = 1 -> PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_TYPE
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT.DUMMYSTRUCT() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT.DisallowStrippedImages.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT.DisallowStrippedImages.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT.EnableBottomUpRandomization.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT.EnableBottomUpRandomization.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT.EnableForceRelocateImages.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT.EnableForceRelocateImages.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT.EnableHighEntropy.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT.EnableHighEntropy.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT.ReservedFlags.get -> uint
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT.ReservedFlags.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYUNION
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYUNION.DUMMYSTRUCTNAME -> PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYSTRUCT
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYUNION.DUMMYUNION() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYUNION.Flags -> uint
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYUNIONNAME -> PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.DUMMYUNION
PInvoke.Kernel32.PROCESS_MITIGATION_ASLR_POLICY.PROCESS_MITIGATION_ASLR_POLICY() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYSTRUCT
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYSTRUCT.DUMMYSTRUCT() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYSTRUCT.DisableAtlThunkEmulation.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYSTRUCT.DisableAtlThunkEmulation.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYSTRUCT.Enable.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYSTRUCT.Enable.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYSTRUCT.ReservedFlags.get -> uint
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYSTRUCT.ReservedFlags.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYUNION
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYUNION.DUMMYSTRUCTNAME -> PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYSTRUCT
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYUNION.DUMMYUNION() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYUNION.Flags -> uint
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYUNIONNAME -> PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.DUMMYUNION
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.PROCESS_MITIGATION_DEP_POLICY() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.Permanent.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_DEP_POLICY.Permanent.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYSTRUCT
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYSTRUCT.AuditNonSystemFontLoading.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYSTRUCT.AuditNonSystemFontLoading.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYSTRUCT.DUMMYSTRUCT() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYSTRUCT.DisableNonSystemFonts.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYSTRUCT.DisableNonSystemFonts.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYSTRUCT.ReservedFlags.get -> uint
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYSTRUCT.ReservedFlags.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYUNION
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYUNION.DUMMYSTRUCTNAME -> PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYSTRUCT
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYUNION.DUMMYUNION() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYUNION.Flags -> uint
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYUNIONNAME -> PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.DUMMYUNION
PInvoke.Kernel32.PROCESS_MITIGATION_FONT_DISABLE_POLICY.PROCESS_MITIGATION_FONT_DISABLE_POLICY() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.AuditNoLowMandatoryLabelImages.get -> uint
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.AuditNoLowMandatoryLabelImages.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.AuditNoRemoteImages.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.AuditNoRemoteImages.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.DUMMYSTRUCT() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.NoLowMandatoryLabelImages.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.NoLowMandatoryLabelImages.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.NoRemoteImages.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.NoRemoteImages.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.PreferSystem32Images.get -> bool
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.PreferSystem32Images.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.ReservedFlags.get -> uint
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT.ReservedFlags.set -> void
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYUNION
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYUNION.DUMMYSTRUCTNAME -> PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYSTRUCT
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYUNION.DUMMYUNION() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYUNION.Flags -> uint
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYUNIONNAME -> PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.DUMMYUNION
PInvoke.Kernel32.PROCESS_MITIGATION_IMAGE_LOAD_POLICY.PROCESS_MITIGATION_IMAGE_LOAD_POLICY() -> void
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.MaxProcessMitigationPolicy = 16 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessASLRPolicy = 1 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessChildProcessPolicy = 13 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessControlFlowGuardPolicy = 7 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessDEPPolicy = 0 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessDynamicCodePolicy = 2 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessExtensionPointDisablePolicy = 6 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessFontDisablePolicy = 9 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessImageLoadPolicy = 10 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessMitigationOptionsMask = 5 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessPayloadRestrictionPolicy = 12 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessSideChannelIsolationPolicy = 14 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessSignaturePolicy = 8 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessStrictHandleCheckPolicy = 3 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessSystemCallDisablePolicy = 4 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessSystemCallFilterPolicy = 11 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_MITIGATION_POLICY.ProcessUserShadowStackPolicy = 15 -> PInvoke.Kernel32.PROCESS_MITIGATION_POLICY
PInvoke.Kernel32.PROCESS_POWER_THROTTLING_STATE
PInvoke.Kernel32.PROCESS_POWER_THROTTLING_STATE.ControlMask -> PInvoke.Kernel32.ProcessorPowerThrottlingFlags
PInvoke.Kernel32.PROCESS_POWER_THROTTLING_STATE.PROCESS_POWER_THROTTLING_STATE() -> void
PInvoke.Kernel32.PROCESS_POWER_THROTTLING_STATE.StateMask -> PInvoke.Kernel32.ProcessorPowerThrottlingFlags
PInvoke.Kernel32.PROCESS_POWER_THROTTLING_STATE.Version -> uint
PInvoke.Kernel32.PROCESS_PROTECTION_LEVEL_INFORMATION
PInvoke.Kernel32.PROCESS_PROTECTION_LEVEL_INFORMATION.PROCESS_PROTECTION_LEVEL_INFORMATION() -> void
PInvoke.Kernel32.PROCESS_PROTECTION_LEVEL_INFORMATION.ProtectionLevel -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessLeapSecondInfoFlags
PInvoke.Kernel32.ProcessLeapSecondInfoFlags.None = 0 -> PInvoke.Kernel32.ProcessLeapSecondInfoFlags
PInvoke.Kernel32.ProcessLeapSecondInfoFlags.PROCESS_LEAP_SECOND_INFO_FLAG_ENABLE_SIXTY_SECOND = 1 -> PInvoke.Kernel32.ProcessLeapSecondInfoFlags
PInvoke.Kernel32.ProcessPriorityClass
PInvoke.Kernel32.ProcessPriorityClass.ABOVE_NORMAL_PRIORITY_CLASS = 32768 -> PInvoke.Kernel32.ProcessPriorityClass
PInvoke.Kernel32.ProcessPriorityClass.BELOW_NORMAL_PRIORITY_CLASS = 16384 -> PInvoke.Kernel32.ProcessPriorityClass
PInvoke.Kernel32.ProcessPriorityClass.HIGH_PRIORITY_CLASS = 128 -> PInvoke.Kernel32.ProcessPriorityClass
PInvoke.Kernel32.ProcessPriorityClass.IDLE_PRIORITY_CLASS = 64 -> PInvoke.Kernel32.ProcessPriorityClass
PInvoke.Kernel32.ProcessPriorityClass.NORMAL_PRIORITY_CLASS = 32 -> PInvoke.Kernel32.ProcessPriorityClass
PInvoke.Kernel32.ProcessPriorityClass.REALTIME_PRIORITY_CLASS = 256 -> PInvoke.Kernel32.ProcessPriorityClass
PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessProtectionLevel.PROTECTION_LEVEL_ANTIMALWARE_LIGHT = 3 -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessProtectionLevel.PROTECTION_LEVEL_AUTHENTICODE = 7 -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessProtectionLevel.PROTECTION_LEVEL_CODEGEN_LIGHT = 6 -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessProtectionLevel.PROTECTION_LEVEL_LSA_LIGHT = 4 -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessProtectionLevel.PROTECTION_LEVEL_NONE = 4294967294 -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessProtectionLevel.PROTECTION_LEVEL_PPL_APP = 8 -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessProtectionLevel.PROTECTION_LEVEL_SAME = 4294967295 -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessProtectionLevel.PROTECTION_LEVEL_WINDOWS = 1 -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessProtectionLevel.PROTECTION_LEVEL_WINDOWS_LIGHT = 2 -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessProtectionLevel.PROTECTION_LEVEL_WINTCB = 5 -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessProtectionLevel.PROTECTION_LEVEL_WINTCB_LIGHT = 0 -> PInvoke.Kernel32.ProcessProtectionLevel
PInvoke.Kernel32.ProcessorArchitecture
PInvoke.Kernel32.ProcessorArchitecture.PROCESSOR_ARCHITECTURE_AMD64 = 9 -> PInvoke.Kernel32.ProcessorArchitecture
PInvoke.Kernel32.ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ARM = 5 -> PInvoke.Kernel32.ProcessorArchitecture
PInvoke.Kernel32.ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ARM64 = 12 -> PInvoke.Kernel32.ProcessorArchitecture
PInvoke.Kernel32.ProcessorArchitecture.PROCESSOR_ARCHITECTURE_IA64 = 6 -> PInvoke.Kernel32.ProcessorArchitecture
PInvoke.Kernel32.ProcessorArchitecture.PROCESSOR_ARCHITECTURE_INTEL = 0 -> PInvoke.Kernel32.ProcessorArchitecture
PInvoke.Kernel32.ProcessorArchitecture.PROCESSOR_ARCHITECTURE_UNKNOWN = 65535 -> PInvoke.Kernel32.ProcessorArchitecture
PInvoke.Kernel32.ProcessorPowerThrottlingFlags
PInvoke.Kernel32.ProcessorPowerThrottlingFlags.None = 0 -> PInvoke.Kernel32.ProcessorPowerThrottlingFlags
PInvoke.Kernel32.ProcessorPowerThrottlingFlags.PROCESS_POWER_THROTTLING_EXECUTION_SPEED = 1 -> PInvoke.Kernel32.ProcessorPowerThrottlingFlags
PInvoke.Kernel32.ProcessorType
PInvoke.Kernel32.ProcessorType.PROCESSOR_AMD_X8664 = 8664 -> PInvoke.Kernel32.ProcessorType
PInvoke.Kernel32.ProcessorType.PROCESSOR_INTEL_386 = 386 -> PInvoke.Kernel32.ProcessorType
PInvoke.Kernel32.ProcessorType.PROCESSOR_INTEL_486 = 486 -> PInvoke.Kernel32.ProcessorType
PInvoke.Kernel32.ProcessorType.PROCESSOR_INTEL_IA64 = 2200 -> PInvoke.Kernel32.ProcessorType
PInvoke.Kernel32.ProcessorType.PROCESSOR_INTEL_PENTIUM = 586 -> PInvoke.Kernel32.ProcessorType
PInvoke.Kernel32.SYSTEM_INFO
PInvoke.Kernel32.SYSTEM_INFO.SYSTEM_INFO() -> void
PInvoke.Kernel32.SYSTEM_INFO.dwActiveProcessorMask -> System.IntPtr
PInvoke.Kernel32.SYSTEM_INFO.dwAllocationGranularity -> int
PInvoke.Kernel32.SYSTEM_INFO.dwNumberOfProcessors -> int
PInvoke.Kernel32.SYSTEM_INFO.dwPageSize -> int
PInvoke.Kernel32.SYSTEM_INFO.dwProcessorType -> PInvoke.Kernel32.ProcessorType
PInvoke.Kernel32.SYSTEM_INFO.lpMaximumApplicationAddress -> void*
PInvoke.Kernel32.SYSTEM_INFO.lpMinimumApplicationAddress -> void*
PInvoke.Kernel32.SYSTEM_INFO.wProcessorArchitecture -> PInvoke.Kernel32.ProcessorArchitecture
PInvoke.Kernel32.SYSTEM_INFO.wProcessorLevel -> ushort
PInvoke.Kernel32.SYSTEM_INFO.wProcessorRevision -> ushort
PInvoke.Kernel32.SYSTEM_INFO.wReserved -> ushort
PInvoke.Kernel32.SafePseudoConsoleHandle
PInvoke.Kernel32.SafePseudoConsoleHandle.SafePseudoConsoleHandle() -> void
PInvoke.Kernel32.SafePseudoConsoleHandle.SafePseudoConsoleHandle(System.IntPtr preexistingHandle, bool ownsHandle = true) -> void
PInvoke.Kernel32.THREAD_START_ROUTINE
PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.SYNCHRONIZE = 1048576 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_ALL_ACCESS = 2097151 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_ALL_ACCESS_WINXP = 2032639 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_DIRECT_IMPERSONATION = 512 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_GET_CONTEXT = 8 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_IMPERSONATE = 256 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_QUERY_INFORMATION = 64 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_QUERY_LIMITED_INFORMATION = 2048 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_SET_CONTEXT = 16 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_SET_INFORMATION = 32 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_SET_LIMITED_INFORMATION = 1024 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_SET_THREAD_TOKEN = 128 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_SUSPEND_RESUME = 2 -> PInvoke.Kernel32.ThreadAccess
PInvoke.Kernel32.ThreadAccess.THREAD_TERMINATE = 1 -> PInvoke.Kernel32.ThreadAccess
const PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_INFO.PME_CURRENT_VERSION = 1 -> ushort
const PInvoke.Kernel32.PROCESS_POWER_THROTTLING_STATE.PROCESS_POWER_THROTTLING_CURRENT_VERSION = 1 -> uint
override PInvoke.Kernel32.SafePseudoConsoleHandle.IsInvalid.get -> bool
override PInvoke.Kernel32.SafePseudoConsoleHandle.ReleaseHandle() -> bool
static PInvoke.Kernel32.CONSOLE_READCONSOLE_CONTROL.Create() -> PInvoke.Kernel32.CONSOLE_READCONSOLE_CONTROL
static PInvoke.Kernel32.CancelIoEx(PInvoke.Kernel32.SafeObjectHandle hFile, System.Threading.NativeOverlapped* lpOverlapped) -> bool
static PInvoke.Kernel32.CreateFile(System.IntPtr filename, PInvoke.Kernel32.ACCESS_MASK access, PInvoke.Kernel32.FileShare share, System.IntPtr securityAttributes, PInvoke.Kernel32.CreationDisposition creationDisposition, PInvoke.Kernel32.CreateFileFlags flagsAndAttributes, PInvoke.Kernel32.SafeObjectHandle templateFile) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.CreateFile(System.ReadOnlySpan<char> filename, PInvoke.Kernel32.ACCESS_MASK access, PInvoke.Kernel32.FileShare share, PInvoke.Kernel32.SECURITY_ATTRIBUTES? securityAttributes, PInvoke.Kernel32.CreationDisposition creationDisposition, PInvoke.Kernel32.CreateFileFlags flagsAndAttributes, PInvoke.Kernel32.SafeObjectHandle templateFile) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.CreateFile(char[] filename, PInvoke.Kernel32.ACCESS_MASK access, PInvoke.Kernel32.FileShare share, PInvoke.Kernel32.SECURITY_ATTRIBUTES? securityAttributes, PInvoke.Kernel32.CreationDisposition creationDisposition, PInvoke.Kernel32.CreateFileFlags flagsAndAttributes, PInvoke.Kernel32.SafeObjectHandle templateFile) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.CreateRemoteThread(System.IntPtr hProcess, PInvoke.Kernel32.SECURITY_ATTRIBUTES? lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, System.IntPtr lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, ref uint? lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.CreateRemoteThread(System.IntPtr hProcess, PInvoke.Kernel32.SECURITY_ATTRIBUTES? lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, void* lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, ref uint? lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.CreateRemoteThread(System.IntPtr hProcess, System.IntPtr lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, System.IntPtr lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, System.IntPtr lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.CreateRemoteThreadEx(System.IntPtr hProcess, PInvoke.Kernel32.SECURITY_ATTRIBUTES lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, System.IntPtr lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, System.IntPtr lpAttributeList, ref uint? lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.CreateRemoteThreadEx(System.IntPtr hProcess, PInvoke.Kernel32.SECURITY_ATTRIBUTES lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, void* lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, PInvoke.Kernel32.PROC_THREAD_ATTRIBUTE_LIST* lpAttributeList, ref uint? lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.CreateRemoteThreadEx(System.IntPtr hProcess, System.IntPtr lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, System.IntPtr lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, System.IntPtr lpAttributeList, System.IntPtr lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.CreateThread(PInvoke.Kernel32.SECURITY_ATTRIBUTES? lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, System.IntPtr lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, ref uint? lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.CreateThread(PInvoke.Kernel32.SECURITY_ATTRIBUTES? lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, void* lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, ref uint? lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.CreateThread(System.IntPtr lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, System.IntPtr lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, System.IntPtr lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static PInvoke.Kernel32.DeviceIoControl(PInvoke.Kernel32.SafeObjectHandle hDevice, int dwIoControlCode, void* inBuffer, int nInBufferSize, void* outBuffer, int nOutBufferSize, out int pBytesReturned, System.Threading.NativeOverlapped* lpOverlapped) -> bool
static PInvoke.Kernel32.DeviceIoControlAsync<TInput, TOutput>(PInvoke.Kernel32.SafeObjectHandle hDevice, uint dwIoControlCode, System.Memory<TInput> inBuffer, System.Memory<TOutput> outBuffer, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<uint>
static PInvoke.Kernel32.DosDateTimeToFileTime(ushort wFatDate, ushort wFatTime, System.IntPtr lpFileTime) -> bool
static PInvoke.Kernel32.DosDateTimeToFileTime(ushort wFatDate, ushort wFatTime, out PInvoke.Kernel32.FILETIME lpFileTime) -> bool
static PInvoke.Kernel32.EnumResourceLanguages(PInvoke.Kernel32.SafeLibraryHandle hModule, System.ReadOnlySpan<char> lpType, System.ReadOnlySpan<char> lpName, PInvoke.Kernel32.EnumResLangProc lpEnumFunc, System.IntPtr lParam) -> bool
static PInvoke.Kernel32.EnumResourceLanguages(PInvoke.Kernel32.SafeLibraryHandle hModule, System.ReadOnlySpan<char> lpType, System.ReadOnlySpan<char> lpName, PInvoke.Kernel32.EnumResLangProc lpEnumFunc, void* lParam) -> bool
static PInvoke.Kernel32.EnumResourceLanguages(PInvoke.Kernel32.SafeLibraryHandle hModule, char[] lpType, char[] lpName, PInvoke.Kernel32.EnumResLangProc lpEnumFunc, System.IntPtr lParam) -> bool
static PInvoke.Kernel32.EnumResourceLanguages(PInvoke.Kernel32.SafeLibraryHandle hModule, char[] lpType, char[] lpName, PInvoke.Kernel32.EnumResLangProc lpEnumFunc, void* lParam) -> bool
static PInvoke.Kernel32.EnumResourceNames(PInvoke.Kernel32.SafeLibraryHandle hModule, System.ReadOnlySpan<char> lpszType, PInvoke.Kernel32.EnumResNameProc lpEnumFunc, System.IntPtr lParam) -> bool
static PInvoke.Kernel32.EnumResourceNames(PInvoke.Kernel32.SafeLibraryHandle hModule, char[] lpszType, PInvoke.Kernel32.EnumResNameProc lpEnumFunc, System.IntPtr lParam) -> bool
static PInvoke.Kernel32.FindResource(PInvoke.Kernel32.SafeLibraryHandle hModule, System.ReadOnlySpan<char> lpName, System.ReadOnlySpan<char> lpType) -> System.IntPtr
static PInvoke.Kernel32.FindResource(PInvoke.Kernel32.SafeLibraryHandle hModule, char[] lpName, char[] lpType) -> System.IntPtr
static PInvoke.Kernel32.FlushInstructionCache(PInvoke.Kernel32.SafeObjectHandle hProcess, System.IntPtr lpcBaseAddress, System.UIntPtr dwSize) -> bool
static PInvoke.Kernel32.GetConsoleAlias(string lpSource, System.Span<char> lpTargetBuffer, string lpExeName) -> int
static PInvoke.Kernel32.GetConsoleAliasExes(System.Span<char> lpExeNameBuffer) -> int
static PInvoke.Kernel32.GetConsoleAliases(System.Span<char> lpAliasBuffer, string lpExeName) -> int
static PInvoke.Kernel32.GetConsoleProcessList(System.Span<uint> lpdwProcessList, int dwProcessCount) -> int
static PInvoke.Kernel32.GetConsoleTitle(System.Span<char> lpConsoleTitle) -> int
static PInvoke.Kernel32.GetCurrentProcessorNumberEx(System.IntPtr ProcNumber) -> void
static PInvoke.Kernel32.GetCurrentProcessorNumberEx(out PInvoke.Kernel32.PROCESSOR_NUMBER ProcNumber) -> void
static PInvoke.Kernel32.GetDllDirectory(System.Span<char> lpBuffer) -> bool
static PInvoke.Kernel32.GetNamedPipeClientComputerName(PInvoke.Kernel32.SafeObjectHandle Pipe, System.Span<char> ClientComputerName) -> bool
static PInvoke.Kernel32.GetNamedPipeHandleState(PInvoke.Kernel32.SafeObjectHandle hNamedPipe, out PInvoke.Kernel32.PipeMode lpState, ref int? lpCurInstances, ref int? lpMaxCollectionCount, ref int? lpCollectDataTimeout, System.Span<char> lpUserName) -> bool
static PInvoke.Kernel32.GetNativeSystemInfo(System.IntPtr lpSystemInfo) -> void
static PInvoke.Kernel32.GetNativeSystemInfo(out PInvoke.Kernel32.SYSTEM_INFO lpSystemInfo) -> void
static PInvoke.Kernel32.GetOverlappedResult(PInvoke.Kernel32.SafeObjectHandle hFile, System.Threading.NativeOverlapped* lpOverlapped, out int lpNumberOfBytesTransferred, bool bWait) -> bool
static PInvoke.Kernel32.GetProcessInformation(PInvoke.Kernel32.SafeObjectHandle hProcess, PInvoke.Kernel32.PROCESS_INFORMATION_CLASS ProcessInformationClass, System.IntPtr ProcessInformation, uint ProcessInformationSize) -> bool
static PInvoke.Kernel32.GetVolumeInformation(string lpRootPathName, System.IntPtr lpVolumeNameBuffer, int nVolumeNameSize, out uint lpVolumeSerialNumber, out int lpMaximumComponentLength, out PInvoke.Kernel32.FileSystemFlags lpFileSystemFlags, System.IntPtr lpFileSystemNameBuffer, int nFileSystemNameSize) -> bool
static PInvoke.Kernel32.GetVolumeInformation(string lpRootPathName, System.Span<char> lpVolumeNameBuffer, out uint lpVolumeSerialNumber, out int lpMaximumComponentLength, out PInvoke.Kernel32.FileSystemFlags lpFileSystemFlags, System.Span<char> lpFileSystemNameBuffer) -> bool
static PInvoke.Kernel32.GetVolumeInformation(string lpRootPathName, char[] lpVolumeNameBuffer, int nVolumeNameSize, out uint lpVolumeSerialNumber, out int lpMaximumComponentLength, out PInvoke.Kernel32.FileSystemFlags lpFileSystemFlags, char[] lpFileSystemNameBuffer, int nFileSystemNameSize) -> bool
static PInvoke.Kernel32.OSVERSIONINFO.Create() -> PInvoke.Kernel32.OSVERSIONINFO
static PInvoke.Kernel32.QueryFullProcessImageName(PInvoke.Kernel32.SafeObjectHandle hProcess, PInvoke.Kernel32.QueryFullProcessImageNameFlags dwFlags, System.Span<char> lpExeName, int lpdwSize) -> bool
static PInvoke.Kernel32.ReadConsole(System.IntPtr hConsoleInput, System.IntPtr lpBuffer, int nNumberOfCharsToRead, out int lpNumberOfCharsRead, System.IntPtr pInputControl) -> bool
static PInvoke.Kernel32.ReadConsole(System.IntPtr hConsoleInput, System.Span<char> lpBuffer, out int lpNumberOfCharsRead, PInvoke.Kernel32.CONSOLE_READCONSOLE_CONTROL? pInputControl) -> bool
static PInvoke.Kernel32.ReadConsole(System.IntPtr hConsoleInput, char[] lpBuffer, int nNumberOfCharsToRead, out int lpNumberOfCharsRead, PInvoke.Kernel32.CONSOLE_READCONSOLE_CONTROL? pInputControl) -> bool
static PInvoke.Kernel32.ReadFile(PInvoke.Kernel32.SafeObjectHandle hFile, void* lpBuffer, int nNumberOfBytesToRead, int* lpNumberOfBytesRead, System.Threading.NativeOverlapped* lpOverlapped) -> bool
static PInvoke.Kernel32.ReadProcessMemory(PInvoke.Kernel32.SafeObjectHandle hProcess, System.IntPtr lpBaseAddress, System.IntPtr lpBuffer, System.UIntPtr nSize, out System.UIntPtr lpNumberOfBytesRead) -> bool
static PInvoke.Kernel32.SetFilePointer(PInvoke.Kernel32.SafeObjectHandle hFile, int lDistanceToMove, System.IntPtr lpDistanceToMoveHigh, System.IO.SeekOrigin dwMoveMethod) -> int
static PInvoke.Kernel32.SetFilePointer(PInvoke.Kernel32.SafeObjectHandle hFile, int lDistanceToMove, ref int? lpDistanceToMoveHigh, System.IO.SeekOrigin dwMoveMethod) -> int
static PInvoke.Kernel32.SetProcessInformation(PInvoke.Kernel32.SafeObjectHandle hProcess, PInvoke.Kernel32.PROCESS_INFORMATION_CLASS ProcessInformationClass, System.IntPtr ProcessInformation, uint ProcessInformationSize) -> bool
static PInvoke.Kernel32.WriteFile(PInvoke.Kernel32.SafeObjectHandle hFile, void* lpBuffer, int nNumberOfBytesToWrite, int* lpNumberOfBytesWritten, System.Threading.NativeOverlapped* lpOverlapped) -> bool
static extern PInvoke.Kernel32.CreateFile(char* filename, PInvoke.Kernel32.ACCESS_MASK access, PInvoke.Kernel32.FileShare share, PInvoke.Kernel32.SECURITY_ATTRIBUTES* securityAttributes, PInvoke.Kernel32.CreationDisposition creationDisposition, PInvoke.Kernel32.CreateFileFlags flagsAndAttributes, PInvoke.Kernel32.SafeObjectHandle templateFile) -> PInvoke.Kernel32.SafeObjectHandle
static extern PInvoke.Kernel32.CreatePseudoConsole(PInvoke.COORD size, PInvoke.Kernel32.SafeObjectHandle hInput, PInvoke.Kernel32.SafeObjectHandle hOutput, PInvoke.Kernel32.CreatePseudoConsoleFlags dwFlags, out PInvoke.Kernel32.SafePseudoConsoleHandle phPC) -> PInvoke.HResult
static extern PInvoke.Kernel32.CreateRemoteThread(System.IntPtr hProcess, PInvoke.Kernel32.SECURITY_ATTRIBUTES* lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, void* lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, uint* lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static extern PInvoke.Kernel32.CreateRemoteThreadEx(System.IntPtr hProcess, PInvoke.Kernel32.SECURITY_ATTRIBUTES* lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, void* lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, PInvoke.Kernel32.PROC_THREAD_ATTRIBUTE_LIST* lpAttributeList, uint* lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static extern PInvoke.Kernel32.CreateThread(PInvoke.Kernel32.SECURITY_ATTRIBUTES* lpThreadAttributes, System.UIntPtr dwStackSize, PInvoke.Kernel32.THREAD_START_ROUTINE lpStartAddress, void* lpParameter, PInvoke.Kernel32.CreateThreadFlags dwCreationFlags, uint* lpThreadId) -> PInvoke.Kernel32.SafeObjectHandle
static extern PInvoke.Kernel32.DosDateTimeToFileTime(ushort wFatDate, ushort wFatTime, PInvoke.Kernel32.FILETIME* lpFileTime) -> bool
static extern PInvoke.Kernel32.FlushInstructionCache(PInvoke.Kernel32.SafeObjectHandle hProcess, void* lpcBaseAddress, System.UIntPtr dwSize) -> bool
static extern PInvoke.Kernel32.FlushProcessWriteBuffers() -> void
static extern PInvoke.Kernel32.GetCurrentProcessToken() -> PInvoke.Kernel32.SafeObjectHandle
static extern PInvoke.Kernel32.GetCurrentProcessorNumber() -> uint
static extern PInvoke.Kernel32.GetCurrentProcessorNumberEx(PInvoke.Kernel32.PROCESSOR_NUMBER* ProcNumber) -> void
static extern PInvoke.Kernel32.GetCurrentThread() -> PInvoke.Kernel32.SafeObjectHandle
static extern PInvoke.Kernel32.GetCurrentThreadEffectiveToken() -> PInvoke.Kernel32.SafeObjectHandle
static extern PInvoke.Kernel32.GetCurrentThreadStackLimits(out System.UIntPtr LowLimit, out System.UIntPtr HighLimit) -> void
static extern PInvoke.Kernel32.GetCurrentThreadToken() -> PInvoke.Kernel32.SafeObjectHandle
static extern PInvoke.Kernel32.GetNativeSystemInfo(PInvoke.Kernel32.SYSTEM_INFO* lpSystemInfo) -> void
static extern PInvoke.Kernel32.GetPriorityClass(PInvoke.Kernel32.SafeObjectHandle hProcess) -> PInvoke.Kernel32.ProcessPriorityClass
static extern PInvoke.Kernel32.GetProcessHandleCount(PInvoke.Kernel32.SafeObjectHandle hProcess, out uint pdwHandleCount) -> bool
static extern PInvoke.Kernel32.GetProcessIdOfThread(PInvoke.Kernel32.SafeObjectHandle hThread) -> uint
static extern PInvoke.Kernel32.GetProcessInformation(PInvoke.Kernel32.SafeObjectHandle hProcess, PInvoke.Kernel32.PROCESS_INFORMATION_CLASS ProcessInformationClass, void* ProcessInformation, uint ProcessInformationSize) -> bool
static extern PInvoke.Kernel32.GetVolumeInformation(string lpRootPathName, char* lpVolumeNameBuffer, int nVolumeNameSize, out uint lpVolumeSerialNumber, out int lpMaximumComponentLength, out PInvoke.Kernel32.FileSystemFlags lpFileSystemFlags, char* lpFileSystemNameBuffer, int nFileSystemNameSize) -> bool
static extern PInvoke.Kernel32.ReadConsole(System.IntPtr hConsoleInput, char* lpBuffer, int nNumberOfCharsToRead, out int lpNumberOfCharsRead, PInvoke.Kernel32.CONSOLE_READCONSOLE_CONTROL* pInputControl) -> bool
static extern PInvoke.Kernel32.ReadProcessMemory(PInvoke.Kernel32.SafeObjectHandle hProcess, void* lpBaseAddress, void* lpBuffer, System.UIntPtr nSize, out System.UIntPtr lpNumberOfBytesRead) -> bool
static extern PInvoke.Kernel32.ResizePseudoConsole(PInvoke.Kernel32.SafePseudoConsoleHandle hPC, PInvoke.COORD size) -> PInvoke.HResult
static extern PInvoke.Kernel32.SetFilePointer(PInvoke.Kernel32.SafeObjectHandle hFile, int lDistanceToMove, int* lpDistanceToMoveHigh, System.IO.SeekOrigin dwMoveMethod) -> int
static extern PInvoke.Kernel32.SetFilePointerEx(PInvoke.Kernel32.SafeObjectHandle hFile, long liDistanceToMove, out long lpNewFilePointer, System.IO.SeekOrigin dwMoveMethod) -> bool
static extern PInvoke.Kernel32.SetProcessInformation(PInvoke.Kernel32.SafeObjectHandle hProcess, PInvoke.Kernel32.PROCESS_INFORMATION_CLASS ProcessInformationClass, void* ProcessInformation, uint ProcessInformationSize) -> bool
static readonly PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_INFO.PME_FAILFAST_ON_COMMIT_FAIL_DISABLE -> System.UIntPtr
static readonly PInvoke.Kernel32.PROCESS_MEMORY_EXHAUSTION_INFO.PME_FAILFAST_ON_COMMIT_FAIL_ENABLE -> System.UIntPtr
static readonly PInvoke.Kernel32.SafePseudoConsoleHandle.Invalid -> PInvoke.Kernel32.SafePseudoConsoleHandle